{
  "info": {
    "name": "Shaadi Mantra API Collection",
    "description": "Complete API collection for testing Shaadi Mantra backend endpoints in both Static and MongoDB modes",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url_static",
      "value": "http://localhost:4500",
      "description": "Base URL for Static/Demo mode"
    },
    {
      "key": "base_url_mongodb", 
      "value": "http://localhost:5500",
      "description": "Base URL for MongoDB mode"
    },
    {
      "key": "auth_token",
      "value": "",
      "description": "JWT token received after authentication"
    },
    {
      "key": "test_email",
      "value": "niteshkumar9591@gmail.com",
      "description": "Test email for authentication"
    },
    {
      "key": "demo_otp",
      "value": "123456",
      "description": "Demo OTP for static mode testing"
    }
  ],
  "item": [
    {
      "name": "Health & Status",
      "item": [
        {
          "name": "Health Check (Static)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url_static}}/health",
              "host": ["{{base_url_static}}"],
              "path": ["health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has status OK', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('OK');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Health Check (MongoDB)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url_mongodb}}/health",
              "host": ["{{base_url_mongodb}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "Database Status (Static)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url_static}}/health/database",
              "host": ["{{base_url_static}}"],
              "path": ["health", "database"]
            }
          }
        },
        {
          "name": "Database Status (MongoDB)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url_mongodb}}/health/database",
              "host": ["{{base_url_mongodb}}"],
              "path": ["health", "database"]
            }
          }
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Send OTP (Static)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\\n  \\"email\\": \\"{{test_email}}\\"\\n}"
            },
            "url": {
              "raw": "{{base_url_static}}/api/auth/send-otp",
              "host": ["{{base_url_static}}"],
              "path": ["api", "auth", "send-otp"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response indicates success', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});",
                  "",
                  "pm.test('Demo OTP is provided', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.include('123456');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Send OTP (MongoDB)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\\n  \\"email\\": \\"{{test_email}}\\"\\n}"
            },
            "url": {
              "raw": "{{base_url_mongodb}}/api/auth/send-otp",
              "host": ["{{base_url_mongodb}}"],
              "path": ["api", "auth", "send-otp"]
            }
          }
        },
        {
          "name": "Verify OTP (Static)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\\n  \\"email\\": \\"{{test_email}}\\",\\n  \\"otp\\": \\"{{demo_otp}}\\"\\n}"
            },
            "url": {
              "raw": "{{base_url_static}}/api/auth/verify-otp",
              "host": ["{{base_url_static}}"],
              "path": ["api", "auth", "verify-otp"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Authentication successful', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.session).to.have.property('accessToken');",
                  "});",
                  "",
                  "// Store the auth token for subsequent requests",
                  "const jsonData = pm.response.json();",
                  "if (jsonData.session && jsonData.session.accessToken) {",
                  "    pm.collectionVariables.set('auth_token', jsonData.session.accessToken);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Verify OTP (MongoDB)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\\n  \\"email\\": \\"{{test_email}}\\",\\n  \\"otp\\": \\"{{demo_otp}}\\"\\n}"
            },
            "url": {
              "raw": "{{base_url_mongodb}}/api/auth/verify-otp",
              "host": ["{{base_url_mongodb}}"],
              "path": ["api", "auth", "verify-otp"]
            }
          }
        },
        {
          "name": "Refresh Token (Static)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url_static}}/api/auth/refresh-token",
              "host": ["{{base_url_static}}"],
              "path": ["api", "auth", "refresh-token"]
            }
          }
        },
        {
          "name": "Get Profile (Auth Required - Static)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url_static}}/api/auth/profile",
              "host": ["{{base_url_static}}"],
              "path": ["api", "auth", "profile"]
            }
          }
        },
        {
          "name": "Logout (Static)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url_static}}/api/auth/logout",
              "host": ["{{base_url_static}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Profiles",
      "item": [
        {
          "name": "Get All Profiles (Static)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url_static}}/api/profiles?page=1&limit=10",
              "host": ["{{base_url_static}}"],
              "path": ["api", "profiles"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains profiles array', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.profiles).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Profiles have required fields', function () {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.profiles.length > 0) {",
                  "        const profile = jsonData.profiles[0];",
                  "        pm.expect(profile).to.have.property('id');",
                  "        pm.expect(profile).to.have.property('name');",
                  "        pm.expect(profile).to.have.property('age');",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Profiles (MongoDB)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url_mongodb}}/api/profiles",
              "host": ["{{base_url_mongodb}}"],
              "path": ["api", "profiles"]
            }
          }
        },
        {
          "name": "Get My Profile (Static)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url_static}}/api/profiles/me",
              "host": ["{{base_url_static}}"],
              "path": ["api", "profiles", "me"]
            }
          }
        },
        {
          "name": "Update My Profile (Static)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\\n  \\"name\\": \\"Test User\\",\\n  \\"age\\": 28,\\n  \\"profession\\": \\"Software Engineer\\",\\n  \\"location\\": \\"Mumbai, Maharashtra\\",\\n  \\"education\\": \\"B.Tech Computer Science\\",\\n  \\"interests\\": [\\"Technology\\", \\"Travel\\", \\"Movies\\"],\\n  \\"about\\": \\"Looking for a life partner who shares similar values.\\"\\n}"
            },
            "url": {
              "raw": "{{base_url_static}}/api/profiles/me",
              "host": ["{{base_url_static}}"],
              "path": ["api", "profiles", "me"]
            }
          }
        }
      ]
    },
    {
      "name": "File Upload",
      "item": [
        {
          "name": "Upload Single File (Static)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "image",
                  "type": "file",
                  "src": [],
                  "description": "Select an image file to upload"
                }
              ]
            },
            "url": {
              "raw": "{{base_url_static}}/api/upload/single",
              "host": ["{{base_url_static}}"],
              "path": ["api", "upload", "single"]
            }
          }
        },
        {
          "name": "Upload Multiple Files (Static)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "images",
                  "type": "file",
                  "src": [],
                  "description": "Select multiple image files"
                }
              ]
            },
            "url": {
              "raw": "{{base_url_static}}/api/upload/multiple",
              "host": ["{{base_url_static}}"],
              "path": ["api", "upload", "multiple"]
            }
          }
        }
      ]
    },
    {
      "name": "Admin Endpoints",
      "item": [
        {
          "name": "Check Email Approval (Static)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\\n  \\"email\\": \\"{{test_email}}\\"\\n}"
            },
            "url": {
              "raw": "{{base_url_static}}/api/admin/check-email",
              "host": ["{{base_url_static}}"],
              "path": ["api", "admin", "check-email"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Email approval status returned', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('approved');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Admin Stats (Static)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url_static}}/api/admin/stats",
              "host": ["{{base_url_static}}"],
              "path": ["api", "admin", "stats"]
            }
          }
        }
      ]
    },
    {
      "name": "Invitations",
      "item": [
        {
          "name": "Create Invitation (Static)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\\n  \\"recipientEmail\\": \\"test@example.com\\",\\n  \\"message\\": \\"Join me on Shaadi Mantra!\\"\\n}"
            },
            "url": {
              "raw": "{{base_url_static}}/api/invitations",
              "host": ["{{base_url_static}}"],
              "path": ["api", "invitations"]
            }
          }
        },
        {
          "name": "Get Invitation by Code (Static)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url_static}}/api/invitations/SAMPLE_CODE",
              "host": ["{{base_url_static}}"],
              "path": ["api", "invitations", "SAMPLE_CODE"]
            }
          }
        }
      ]
    }
  ]
}
