name: Keep Render Alive

on:
  schedule:
    # Run every 10 minutes (Render free tier sleeps after ~15 minutes of inactivity)
    - cron: '*/10 * * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  keep-alive:
    runs-on: ubuntu-latest

    steps:
    - name: Ping Render Service
      run: |
        echo "üåê Pinging Render service to keep it alive..."
        TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S UTC')

        # Make the request with timeout
        RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code};TIME:%{time_total}" \
          --max-time 10 \
          "https://shaadi-mantrana.onrender.com/health")

        # Extract status and response time
        HTTP_STATUS=$(echo "$RESPONSE" | tr -d '\n' | sed -e 's/.*HTTPSTATUS://' | sed -e 's/;TIME.*//')
        RESPONSE_TIME=$(echo "$RESPONSE" | tr -d '\n' | sed -e 's/.*TIME://')

        if [ "$HTTP_STATUS" = "200" ]; then
          echo "‚úÖ [$TIMESTAMP] Render service is awake (HTTP $HTTP_STATUS, ${RESPONSE_TIME}s)"
        else
          echo "‚ùå [$TIMESTAMP] Render service ping failed (HTTP $HTTP_STATUS, ${RESPONSE_TIME}s)"
          exit 1
        fi

    - name: Notify on Failure
      if: failure()
      run: |
        echo "üö® Render service appears to be down or unresponsive"
        # You could add notification logic here (Slack, Discord, email, etc.)
